## Mainly used for local development
##
## docker compose up
## docker compose up --detach
## docker compose up --build --watch

services:
  ## https://github.com/docker/compose/issues/11773
  ## Used just to keep Compose alive, thus making sure `sync+restart` works correctly
  ## Can be removed if other long-term service is available, e.g. database
  # __dummy-service-keep-alive:
  #   image: alpine:latest
  #   init: true
  #   command: ["sh", "-c", "while true; do sleep 2; done"]

  ## https://hub.docker.com/_/postgres
  ##
  ## Access UI at localhost:<DB_UI_PORT>/?pgsql=<DB_SERVICE_NAME>&username=<POSTGRES_USER>
  ## e.g. http://localhost:8080/?pgsql=db&username=postgres
  ##
  ## Changes to username/password does not seem to reflect unless container is recreated
  ## Remember to backup when doing so
  db:
    image: postgres
    # restart: always
    shm_size: 128mb
    ports:
      - ${DB_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  db-ui:
    image: adminer
    # restart: always
    ports:
      - ${DB_UI_PORT}:8080

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    env_file: .env
    ports:
      - ${PORT}:${PORT}

    develop:
      watch:
        - action: sync+restart
          path: packages/api/src/
          target: /spill-it-v1/packages/api/src/
        - action: sync+restart
          path: packages/db/src/
          target: /spill-it-v1/packages/db/src/

        ## Also add workspace dependencies here
        # - action: sync+restart
        #   path: packages/<workspace-package>/src/
        #   target: /spill-it-v1/packages/<workspace-package>/src/

  ui:
    build:
      context: .
      dockerfile: Dockerfile.ui.dev
    env_file: .env
    ports:
      - ${UI_PORT}:${UI_PORT}

    develop:
      watch:
        - action: sync
          path: packages/ui/src/
          target: /spill-it-v1/packages/ui/src/
        - action: sync
          path: packages/gql/codegen/ui
          target: /spill-it-v1/packages/gql/codegen/ui
